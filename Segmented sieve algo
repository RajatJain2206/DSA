#include <bits/stdc++.h>
using namespace std;

int N = 1000000;
bool sieve[1000001];

//creating sieve
void createSieve(){
  for(int i=2;i<=N;i++){
    sieve[i] = true;
  }

  for(int i=2;i*i<=N;i++){
    if(sieve[i]==1){
      for(int j=i*i;j<=N;j=j+i){
        sieve[j] = 0;
      }
    }
  }
}

vector<int> GeneratePrimes(int N){
  vector<int> ds;
  for(int i=2;i<=N;i++){
    if(sieve[i]==1){
      ds.push_back(i);
    }
  }
  return ds;
}

int main(){
createSieve();
int l,r;
cin>>l>>r;
vector<int> primes = GeneratePrimes(sqrt(r));

//make a dummy array and initially true
int dummy[r-l+1];
for(int i=0;i<r-l+1;i++){
  dummy[i]=1;
}

//mark multiples of primes as false
for(auto pr:primes){
  int firstMultiple = (l/pr)*pr;
  if(firstMultiple < l){
    firstMultiple += pr;
  }

  for(int i=max(firstMultiple,pr*pr);i<=r;i+=pr){
    dummy[i-l]=0;
  }
}

//print no. of primes

for(int i=l;i<=r;i++){
  if(dummy[i-l]==1){
    cout<<i<<" ";
  }
}
cout<<endl;

}
